#REAL TIME VALIDATION


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form with Real-Time Validation</title>
    <link rel="stylesheet" href="style.css">
</head>
<style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.form-container {
    background-color: #ffffff;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 400px;
}

h2 {
    margin-bottom: 20px;
    text-align: center;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 2px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
}

.form-group input:focus {
    border-color: #007bff;
    outline: none;
}

.error-message {
    color: red;
    font-size: 12px;
    margin-top: 5px;
    display: none;
}

button {
    width: 100%;
    padding: 15px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

</style>
<body>

    <div class="form-container">
        <h2>Sign Up Form</h2>
        <form id="signup-form">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" placeholder="Enter your name" required>
                <small class="error-message"></small>
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="Enter your email" required>
                <small class="error-message"></small>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Enter a password" required>
                <small class="error-message"></small>
            </div>

            <div class="form-group">
                <label for="confirm-password">Confirm Password</label>
                <input type="password" id="confirm-password" name="confirm-password" placeholder="Confirm your password" required>
                <small class="error-message"></small>
            </div>

            <button type="submit">Sign Up</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('signup-form');
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirm-password');

    // Add real-time validation to each field
    nameInput.addEventListener('input', validateName);
    emailInput.addEventListener('input', validateEmail);
    passwordInput.addEventListener('input', validatePassword);
    confirmPasswordInput.addEventListener('input', validateConfirmPassword);

    form.addEventListener('submit', function(e) {
        e.preventDefault(); // Prevent form submission for testing
        validateForm();
    });

    function validateName() {
        const name = nameInput.value.trim();
        const errorMessage = nameInput.nextElementSibling;
        
        if (name.length < 3) {
            errorMessage.textContent = "Name must be at least 3 characters long";
            errorMessage.style.display = 'block';
            return false;
        } else {
            errorMessage.style.display = 'none';
            return true;
        }
    }

    function validateEmail() {
        const email = emailInput.value.trim();
        const errorMessage = emailInput.nextElementSibling;
        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;

        if (!email.match(emailPattern)) {
            errorMessage.textContent = "Please enter a valid email";
            errorMessage.style.display = 'block';
            return false;
        } else {
            errorMessage.style.display = 'none';
            return true;
        }
    }

    function validatePassword() {
        const password = passwordInput.value.trim();
        const errorMessage = passwordInput.nextElementSibling;

        if (password.length < 6) {
            errorMessage.textContent = "Password must be at least 6 characters long";
            errorMessage.style.display = 'block';
            return false;
        } else {
            errorMessage.style.display = 'none';
            return true;
        }
    }

    function validateConfirmPassword() {
        const confirmPassword = confirmPasswordInput.value.trim();
        const password = passwordInput.value.trim();
        const errorMessage = confirmPasswordInput.nextElementSibling;

        if (confirmPassword !== password) {
            errorMessage.textContent = "Passwords do not match";
            errorMessage.style.display = 'block';
            return false;
        } else {
            errorMessage.style.display = 'none';
            return true;
        }
    }

    function validateForm() {
        if (validateName() && validateEmail() && validatePassword() && validateConfirmPassword()) {
            alert('Form submitted successfully!');
            form.submit(); // Remove this line when ready for real submission
        } else {
            alert('Please fix the errors before submitting');
        }
    }
});

    </script>
</body>
</html>
